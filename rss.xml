<?xml version='1.0' encoding='utf-8'?>
<rss version='2.0'>
    <channel>
        <title>Mintsky's Blog</title>
        <link>https://mintsky.xyz/rss.xml</link>
        <description>Posts' Abstracts on Mintsky's Blog</description>
        <lastBuildDate>Fri, 10 Jul 2020 00:00:00 GMT</lastBuildDate>
        <language>zh-CN</language>
        <generator>https://github.com/saafo/homepage/blob/master/generator.py</generator>
        <copyright>Copyright 2020 Mintsky All Rights Reserved</copyright>

        <item>
            <title>LeetCode@Swift - Vol.4 栈和队列</title>
            <link>https://blog.mintsky.xyz/20200710_lc-at-swift-04-stack-and-queue</link>
            <guid>https://blog.mintsky.xyz/20200710_lc-at-swift-04-stack-and-queue</guid>
            <pubDate>Fri, 10 Jul 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<p>栈和队列在众多语言中已经有了成熟的实现，面试的时候也一般不会让手写一个栈或者队列。不用太关注底层实现，直接用就行了。</p>
                <p>栈-&gt;数组/单链表</p>
                <p>队列-&gt;数组/双链表</p>
                <h2>比较含退格的字符串</h2>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>LeetCode@Swift - Vol.3 链表</title>
            <link>https://blog.mintsky.xyz/20200708_lc-at-swift-03-linked-list</link>
            <guid>https://blog.mintsky.xyz/20200708_lc-at-swift-03-linked-list</guid>
            <pubDate>Wed, 08 Jul 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<p>链表的题目，对于思维的难度（除开部分题的递归解法）要求不算高，主要考察的是代码的实现能力，尽量做到简洁。</p>
                <h2>反转链表</h2>
                <p><a href="https://leetcode-cn.com/problems/reverse-linked-list/">反转链表 - 力扣</a></p>
                <blockquote>
                <p>反转一个单链表。
                </p>
                </blockquote>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>LeetCode@Swift - Vol.2 排序算法</title>
            <link>https://blog.mintsky.xyz/20200701_lc-at-swift-02-sorting-algorithm</link>
            <guid>https://blog.mintsky.xyz/20200701_lc-at-swift-02-sorting-algorithm</guid>
            <pubDate>Wed, 01 Jul 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<h2>寻找两个正序数组的中位数</h2>
                <p><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">寻找两个正序数组的中位数 - 力扣</a></p>
                <blockquote>
                <p>给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。</p>
                <p>请你找出这两个正序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。
                </p>
                </blockquote>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>LeetCode@Swift - Vol.1 数组和字典的查找</title>
            <link>https://blog.mintsky.xyz/20200630_lc-at-swift-01-finding-in-arrays-and-dicts</link>
            <guid>https://blog.mintsky.xyz/20200630_lc-at-swift-01-finding-in-arrays-and-dicts</guid>
            <pubDate>Tue, 30 Jun 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<p>最近开始接触Swift和LeetCode。这个系列的每一期主要是展示一道题的解法，然后逐步优化，顺便整理Swift相关语法。</p>
                <h2>两数之和</h2>
                <p><a href="https://leetcode-cn.com/problems/two-sum">两数之和 - 力扣</a></p>
                <blockquote>
                <p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
                </p>
                </blockquote>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>配置 Docker TLS 连接</title>
            <link>https://blog.mintsky.xyz/20200528_configure-docker-tls</link>
            <guid>https://blog.mintsky.xyz/20200528_configure-docker-tls</guid>
            <pubDate>Thu, 28 May 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<blockquote>
                <p>在远程管理<code>Docker</code>的时候，例如用<code>Portainer</code>来连接远程<code>Docker</code>时，默认的方式是在<code>2375</code>端口上连接。但<code>2375</code>上没有任何的鉴权，所以我们需要用更安全的方式来连接远程<code>Docker</code>。</p>
                <p>本文主要介绍的是通过<code>TLS CA certificate</code>, <code>TLS certificate</code>和<code>TLS key</code>来远程连接<code>Docker</code>。 </p>
                </blockquote>
                <h2>生成 TLS 证书和秘钥</h2>
                <p>生成证书秘钥可以通过<code>openssl</code>，如果不熟悉<code>openssl</code>，在这里介绍一种新的工具：<code>cfssl</code></p>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>flask框架概念理解及部署方式</title>
            <link>https://blog.mintsky.xyz/20200517_flask-startup</link>
            <guid>https://blog.mintsky.xyz/20200517_flask-startup</guid>
            <pubDate>Sun, 17 May 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<blockquote>
                <p>最近写了一个<code>flask</code>项目，在整个学习的过程中走了不少的弯路，但同时对<code>flask</code>也有了更深刻的理解。我将我的理解做个简单的记录，同时也是一个指路贴，大家可以对<code>flask</code>有一个大概的了解，结合自己的需求找到需要学习的知识点进行更进一步的学习。</p>
                </blockquote>
                <h2>基本概念</h2>
                <h3>最简框架解析</h3>
                <p>我们先来看一个最简单的例子：</p>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>从hello.go到lighterDOCK（三）知识准备和项目配置</title>
            <link>https://blog.mintsky.xyz/20200505_from-hello.go-to-lighterdock-3</link>
            <guid>https://blog.mintsky.xyz/20200505_from-hello.go-to-lighterdock-3</guid>
            <pubDate>Tue, 05 May 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<p>这篇文章会比较水，主要是教程链接和学习路线指引。</p>
                <p>对<code>Docker</code>源码做出修改，我们需要一些基本的能力，以下给出一些资料和教程。</p>
                <h2>Go 语法相关</h2>
                <ul>
                <li><a href="https://github.com/unknwon/the-way-to-go_ZH_CN">The Way to Go</a></li>
                <li><a href="https://www.runoob.com/go/go-tutorial.html">Go 语言教程 - 菜鸟教程</a></li>
                </ul>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>从hello.go到lighterDOCK（二）在国内编译Docker-ce</title>
            <link>https://blog.mintsky.xyz/20200503_from-hello.go-to-lighterdock-2</link>
            <guid>https://blog.mintsky.xyz/20200503_from-hello.go-to-lighterdock-2</guid>
            <pubDate>Sun, 03 May 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<blockquote>
                <p>众所周知，由于国内的网络环境，诸如docker.com, github.com, debian.org, golang.org等网站的连接速度并不理想。因为<code>Docker</code>的编译并不仅仅是本地编译，而是需要很多的网络依赖包，在编译的过程中需要频繁地从以上网站下载资源。这篇文章详细地讲述了怎样在国内的网络环境编译<code>Docker</code>。</p>
                </blockquote>
                <h2>教程环境</h2>
                <ul>
                <li>Ubuntu Server 20.04 (focal)(本文命令为focal的地方，其他版本的同学可以自行替换成对应的代号)</li>
                <li>Docker v19.03.8</li>
                <li>需要一个socks&amp;http(s)代理，能够通过<code>export</code>命令导入运行环境即可。</li>
                </ul>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>从hello.go到lighterDOCK（一）在国内编译moby</title>
            <link>https://blog.mintsky.xyz/20200501_from-hello.go-to-lighterdock-1</link>
            <guid>https://blog.mintsky.xyz/20200501_from-hello.go-to-lighterdock-1</guid>
            <pubDate>Fri, 01 May 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<blockquote>
                <p>众所周知，由于国内的网络环境，诸如docker.com, github.com, debian.org, golang.org等网站的连接速度并不理想。因为<code>moby</code>的编译并不仅仅是本地编译，而是需要很多的网络依赖包，在编译的过程中需要频繁地从以上网站下载资源。这篇文章详细地讲述了怎样在国内的网络环境编译<code>moby</code>。</p>
                </blockquote>
                <h2>教程环境</h2>
                <ul>
                <li>Ubuntu Server 20.04</li>
                <li>Docker v19.03.8, build afacb8b7f0</li>
                <li>Go v1.13.8 linux/amd64</li>
                <li>Moby v19.03.8 <a href="https://github.com/moby/moby/tree/f6163d3f7a10c5d01a92bc8b86e204d784b2f6d6">commit f6163d3</a></li>
                </ul>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>人类的本质是造轮子</title>
            <link>https://blog.mintsky.xyz/20200410_new-home</link>
            <guid>https://blog.mintsky.xyz/20200410_new-home</guid>
            <pubDate>Fri, 10 Apr 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<p>博客终于建好了。</p>
                <p>这里，我用了“建”，没有用“搭”。</p>
                <p>起因是，先前为了练手建了个主页，如果再用博客模板的话，就只有和原来的主页说再见了~~别啊~~</p>
                <p>于是脑子一时抽风，干脆自己写个框架吧。</p>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>用docker-compose部署postgresql和pgAdmin4</title>
            <link>https://blog.mintsky.xyz/20200307_docker-compose-postgres</link>
            <guid>https://blog.mintsky.xyz/20200307_docker-compose-postgres</guid>
            <pubDate>Sat, 07 Mar 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<blockquote>
                <p>本来一直在用<code>docker</code>部署<code>postgresql</code>和<code>pgAdmin4</code>，但每次部署起来参数很多很麻烦，而且重启容器或者服务器都很麻烦，索性用<code>docker-compose</code>来部署。</p>
                </blockquote>
                <h2>准备步骤</h2>
                <p>安装<code>docker-compose</code></p>
                <p>```bash
                apt install docker-compose</p>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>Golang 在 VSCode 中的调试配置</title>
            <link>https://blog.mintsky.xyz/20200229_configure-go-in-vscode</link>
            <guid>https://blog.mintsky.xyz/20200229_configure-go-in-vscode</guid>
            <pubDate>Sat, 29 Feb 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<p>（解决Golang在VSCode中调试时无法接收标准输入(stdin)的问题）</p>
                <blockquote>
                <p>最近开始接触Go语言，但在配置VSCode的调试文件的时候发现VSCode中的官方GO插件调试时用的是调试控制台(debug console)而非终端(terminal)，找了很多设置也没有类似于<code>terminal</code>或者<code>internalTerminal</code>或者<code>externalTerminal</code>的配置项。最终在<code>vscode-go</code>仓库的<a href="https://github.com/microsoft/vscode-go/issues/219">issue</a>里找到了问题所在。鉴于目前还没有国内的博客帖子总结该问题，在这里总结一下问题原因及解决方案。</p>
                </blockquote>
                <h3>问题起因</h3>
                <p>最开始以为是<code>vscode-go</code>插件的锅，但在相关问题的<a href="https://github.com/microsoft/vscode-go/issues/219">issue</a>里，<code>vscode-go</code>的开发团队给出的回复是，由于<code>delve</code>调试器本身在普通模式运行时就无法直接接受命令行标准输入(stdin)，导致配套的相关插件也无法正常工作。本来<code>delve</code>自身加上支持接受命令行输入的功能即可彻底解决这个问题，但似乎<code>delve</code>开发团队的人员<a href="https://github.com/go-delve/delve/issues/1274/#issuecomment-406981956">并不对此感兴趣</a>，不少开发者也同样也对此表示<a href="https://github.com/microsoft/vscode-go/issues/219/#issuecomment-455968894">无奈</a>,只有用目前其他开发者给出的<a href="https://github.com/microsoft/vscode-go/issues/219/#issuecomment-530933960">折中的解决办法</a>。</p>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>
        <item>
            <title>阿里云ECS初始化及常用操作</title>
            <link>https://blog.mintsky.xyz/20200218_ali-ecs</link>
            <guid>https://blog.mintsky.xyz/20200218_ali-ecs</guid>
            <pubDate>Tue, 18 Feb 2020 00:00:00 GMT</pubDate>
            <description>
                <![CDATA[<h2>初始化</h2>
                <ul>
                <li>重置实例密码</li>
                <li>控制台重启实例</li>
                <li>apt update &amp; upgrade</li>
                <li>apt install git</li>
                <li>apt install axel</li>
                <li>apt install python3-pip</li>
                </ul>
                <p>阅读更多...</p>
                ]]>
            </description>
        </item>

    </channel>
</rss>